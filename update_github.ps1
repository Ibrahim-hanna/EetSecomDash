# Script de mise √† jour GitHub pour EetSecomDash
# Ce script met √† jour votre repository GitHub existant avec les nouvelles modifications

param(
    [Parameter(Mandatory=$true)]
    [string]$GitHubUsername,
    
    [string]$RepoName = "EetSecomDash",
    [string]$CommitMessage = "Update: Nouvelles fonctionnalit√©s et am√©liorations"
)

Write-Host "üîÑ === MISE √Ä JOUR EetSecomDash SUR GITHUB ===" -ForegroundColor Green
Write-Host "Nom d'utilisateur GitHub : $GitHubUsername" -ForegroundColor Cyan
Write-Host "Nom du repository : $RepoName" -ForegroundColor Cyan
Write-Host "Message de commit : $CommitMessage" -ForegroundColor Cyan

# V√©rifier l'√©tat Git
Write-Host "`nüìã V√©rification de l'√©tat Git..." -ForegroundColor Yellow
$gitStatus = git status --porcelain

if (-not $gitStatus) {
    Write-Host "‚úÖ Aucune modification d√©tect√©e. Votre projet est d√©j√† √† jour !" -ForegroundColor Green
    Write-Host "üìç URL : https://github.com/$GitHubUsername/$RepoName" -ForegroundColor Cyan
    exit 0
}

Write-Host "üìù Modifications d√©tect√©es :" -ForegroundColor Yellow
Write-Host $gitStatus -ForegroundColor White

# Ajouter toutes les modifications
Write-Host "`nüì¶ Ajout des modifications..." -ForegroundColor Yellow
git add .
Write-Host "‚úÖ Modifications ajout√©es au staging area" -ForegroundColor Green

# Commiter les modifications
Write-Host "`nüíæ Cr√©ation du commit..." -ForegroundColor Yellow
git commit -m $CommitMessage
Write-Host "‚úÖ Commit cr√©√© avec succ√®s" -ForegroundColor Green

# V√©rifier si le remote existe
$existingRemote = git remote get-url origin 2>$null
if (-not $existingRemote) {
    Write-Host "`nüîó Configuration du remote GitHub..." -ForegroundColor Yellow
    $remoteUrl = "https://github.com/$GitHubUsername/$RepoName.git"
    git remote add origin $remoteUrl
    Write-Host "‚úÖ Remote configur√© : $remoteUrl" -ForegroundColor Green
} else {
    Write-Host "`n‚úÖ Remote d√©j√† configur√© : $existingRemote" -ForegroundColor Green
}

# Pousser les modifications
Write-Host "`nüì§ Poussage des modifications vers GitHub..." -ForegroundColor Yellow
try {
    git push origin master
    Write-Host "‚úÖ Modifications pouss√©es avec succ√®s !" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors du push : $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "`nüîß SOLUTIONS POSSIBLES :" -ForegroundColor Yellow
    Write-Host "1. V√©rifiez que le repository existe : https://github.com/$GitHubUsername/$RepoName" -ForegroundColor White
    Write-Host "2. V√©rifiez vos permissions sur le repository" -ForegroundColor White
    Write-Host "3. V√©rifiez votre authentification GitHub" -ForegroundColor White
    Write-Host "4. Si c'est un nouveau repository, utilisez le script deploy_to_github.ps1" -ForegroundColor White
    exit 1
}

# Afficher les informations finales
Write-Host "`nüéâ SUCC√àS ! Votre projet a √©t√© mis √† jour sur GitHub !" -ForegroundColor Green
Write-Host "üìç URL : https://github.com/$GitHubUsername/$RepoName" -ForegroundColor Cyan

Write-Host "`nüìã INFORMATIONS SUR LA MISE √Ä JOUR :" -ForegroundColor Yellow
Write-Host "‚Ä¢ Commit : $CommitMessage" -ForegroundColor White
Write-Host "‚Ä¢ Date : $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" -ForegroundColor White
Write-Host "‚Ä¢ Branche : master" -ForegroundColor White

Write-Host "`nüîó LIENS UTILES :" -ForegroundColor Cyan
Write-Host "‚Ä¢ Repository : https://github.com/$GitHubUsername/$RepoName" -ForegroundColor White
Write-Host "‚Ä¢ Commits : https://github.com/$GitHubUsername/$RepoName/commits" -ForegroundColor White
Write-Host "‚Ä¢ Actions : https://github.com/$GitHubUsername/$RepoName/actions" -ForegroundColor White

Write-Host "`n‚úÖ MISE √Ä JOUR TERMIN√âE AVEC SUCC√àS !" -ForegroundColor Green 